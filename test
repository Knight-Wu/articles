# wutong_entry-task

* test result :

1. use 1 user, write api qps is about 5-6k
2. use 10 users, write api qps is about 20k
3. use 1 million users, write api qps is about 12-14k

but result depends on environment.

以上是调整了redis 之后测出的最佳性能， 截图如下
* 1 user , QPS is 5-6k
![enter image description here](https://drive.google.com/uc?id=19s6-yxk1grH6clXNwoJWZNO-78WD3Czx)
* 10 user, QPS is about 16k
![](https://drive.google.com/uc?id=1BUQKPX_SHuGcztmX8gYwPXbi0tSiQzio)


### 实现
* client
1. client 端用了TCP 连接池， 默认1000 个连接， 可idle，用户500 ms获取不到连接即超时返回；
2. 使用rateCounter 计算QPS， 并将结果打印到 rate.log； 
3. 使用sync.WaitGroup 使所有gorountine （每个用户一个gorountine） 都退出后再退出main；

* server

1. server 通过暴露api 方法， client 通过rpc 访问
2. 使用redis 连接池， 连接数量和 client 端TCP 连接池数量一致，可idle
3. 使用一个map，key：userId，val：rateLimiter，来控制每个user 的最大访问速率，若用户一段时间不访问，则清空对应的entry
4. 使用redis 的hset， field为userId 来隔离每个用户
 
